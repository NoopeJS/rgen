import{exec}from"child_process";import{createInterface}from"readline";import fs from"fs-extra";import{extname,join}from"path";import{minify}from"terser";export async function runInDir(t,e){return new Promise(((r,o)=>{exec(t,{cwd:e},((t,e,n)=>{t?o(t):r(e||n)}))}))}export async function promptUser(t){const{value:e}=await new Promise((e=>{const r=createInterface({input:process.stdin,output:process.stdout});r.question(t,(t=>{r.close(),e({value:t})}))}));return e}export async function minifyReactChunks(t,e){fs.readdirSync(t).forEach((async r=>{const o=join(t,r);if(fs.statSync(o).isFile()&&".js"===extname(o)&&r.startsWith("react")){const t=fs.readFileSync(o,"utf-8");try{const o=await minify(t),n=join(e,r);fs.writeFileSync(n,o.code)}catch(t){console.log(`Error occurred while minifying ${o}:\n ${t}`)}}}))}export async function getViteDevPort(){const t=join(process.cwd(),"vite.config.js");return(await import(`file://${t}`)).default.port||3001}export async function getVitePreviewPort(){const t=join(process.cwd(),"vite.config.js");return(await import(`file://${t}`)).default.preview.port||3201}